{"version":3,"file":"static/js/770.c235119e.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/form-control/src/form-control.tsx","../node_modules/@chakra-ui/form-control/src/use-form-control.ts","../node_modules/@chakra-ui/input/src/input.tsx","../node_modules/@chakra-ui/portal/src/portal-manager.tsx","../node_modules/@chakra-ui/react-use-safe-layout-effect/src/index.ts","../node_modules/@chakra-ui/react-use-timeout/src/index.ts","../node_modules/@chakra-ui/react-use-callback-ref/src/index.ts","../node_modules/@chakra-ui/react-use-update-effect/src/index.ts","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/@chakra-ui/toast/src/toast.component.tsx","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/@chakra-ui/portal/src/portal.tsx","../node_modules/@chakra-ui/toast/src/toast.provider.tsx","../node_modules/@chakra-ui/toast/src/use-toast.tsx","../node_modules/@chakra-ui/toast/src/toast.placement.ts","../node_modules/@chakra-ui/icon/src/icon.tsx","../node_modules/@chakra-ui/alert/src/icons.tsx","../node_modules/@chakra-ui/alert/src/alert-context.ts","../node_modules/@chakra-ui/alert/src/alert.tsx","../node_modules/@chakra-ui/alert/src/alert-icon.tsx","../node_modules/@chakra-ui/alert/src/alert-title.tsx","../node_modules/@chakra-ui/alert/src/alert-description.tsx","../node_modules/@chakra-ui/close-button/src/close-button.tsx","../node_modules/@chakra-ui/toast/src/toast.store.ts","../node_modules/@chakra-ui/toast/src/toast.tsx","../node_modules/@chakra-ui/toast/src/toast.utils.ts"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { useCallback, useId, useState } from \"react\"\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `,\n})\n\nexport { useFormControlContext, useFormControlStyles }\n\nexport interface FormControlOptions {\n  /**\n   * If `true`, the form control will be required. This has 2 side effects:\n   * - The `FormLabel` will show a required indicator\n   * - The form element (e.g, Input) will have `aria-required` set to `true`\n   *\n   * @default false\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled. This has 2 side effects:\n   * - The `FormLabel` will have `data-disabled` attribute\n   * - The form element (e.g, Input) will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid. This has 2 side effects:\n   * - The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n   * - The form element (e.g, Input) will have `aria-invalid` set to `true`\n   *\n   * @default false\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly\n   *\n   * @default false\n   */\n  isReadOnly?: boolean\n}\n\ninterface FormControlContext extends FormControlOptions {\n  /**\n   * The label text used to inform users as to what information is\n   * requested for a text field.\n   */\n  label?: string\n  /**\n   * The custom `id` to use for the form control. This is passed directly to the form element (e.g, Input).\n   * - The form element (e.g. Input) gets the `id`\n   * - The form label id: `form-label-${id}`\n   * - The form error text id: `form-error-text-${id}`\n   * - The form helper text id: `form-helper-text-${id}`\n   */\n  id?: string\n}\n\ntype FormControlProviderContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  \"getRootProps\" | \"htmlProps\"\n>\n\nconst [FormControlProvider, useFormControlContext] =\n  createContext<FormControlProviderContext>({\n    strict: false,\n    name: \"FormControlContext\",\n  })\n\nfunction useFormControlProvider(props: FormControlContext) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props\n\n  // Generate all the required ids\n  const uuid = useId()\n  const id = idProp || `field-${uuid}`\n\n  const labelId = `${id}-label`\n  const feedbackId = `${id}-feedback`\n  const helpTextId = `${id}-helptext`\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = useState(false)\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = useState(false)\n\n  // Track whether the form element (e.g, `input`) has focus.\n  const [isFocused, setFocus] = useState(false)\n\n  const getHelpTextProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasHelpText(true)\n      }),\n    }),\n    [helpTextId],\n  )\n\n  const getLabelProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props.id !== undefined ? props.id : labelId,\n      htmlFor: props.htmlFor !== undefined ? props.htmlFor : id,\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId],\n  )\n\n  const getErrorMessageProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasFeedbackText(true)\n      }),\n      \"aria-live\": \"polite\",\n    }),\n    [feedbackId],\n  )\n\n  const getRootProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [htmlProps, isDisabled, isFocused, isInvalid, isReadOnly],\n  )\n\n  const getRequiredIndicatorProps = useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\",\n    }),\n    [],\n  )\n\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps,\n  }\n}\n\nexport interface FormControlProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormControl\">,\n    FormControlContext {}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n *\n * @see Docs https://chakra-ui.com/docs/components/form-control\n */\nexport const FormControl = forwardRef<FormControlProps, \"div\">(\n  function FormControl(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props)\n    const ownProps = omitThemingProps(props)\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps)\n\n    const className = cx(\"chakra-form-control\", props.className)\n\n    return (\n      <FormControlProvider value={context}>\n        <FormControlStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className={className}\n            __css={styles[\"container\"]}\n          />\n        </FormControlStylesProvider>\n      </FormControlProvider>\n    )\n  },\n)\n\nFormControl.displayName = \"FormControl\"\n\nexport interface FormHelperTextProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nexport const FormHelperText = forwardRef<FormHelperTextProps, \"div\">(\n  function FormHelperText(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n    const className = cx(\"chakra-form__helper-text\", props.className)\n    return (\n      <chakra.div\n        {...field?.getHelpTextProps(props, ref)}\n        __css={styles.helperText}\n        className={className}\n      />\n    )\n  },\n)\n\nFormHelperText.displayName = \"FormHelperText\"\n","import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * The native HTML `size` attribute to be passed to the `input`\n   */\n  htmlSize?: number\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface InputProps\n  extends Omit<HTMLChakraProps<\"input\">, Omitted>,\n    InputOptions,\n    ThemingProps<\"Input\">,\n    FormControlOptions {}\n\n/**\n * Input\n *\n * Element that allows users enter single valued data.\n *\n * @see Docs https://chakra-ui.com/docs/components/input\n */\nexport const Input = forwardRef<InputProps, \"input\">(function Input(\n  props,\n  ref,\n) {\n  const { htmlSize, ...rest } = props\n\n  const styles = useMultiStyleConfig(\"Input\", rest)\n  const ownProps = omitThemingProps(rest)\n  const input = useFormControl<HTMLInputElement>(ownProps)\n  const _className = cx(\"chakra-input\", props.className)\n\n  return (\n    <chakra.input\n      size={htmlSize}\n      {...input}\n      __css={styles.field}\n      ref={ref}\n      className={_className}\n    />\n  )\n})\n\nInput.displayName = \"Input\"\n\n// This is used in `input-group.tsx`\nInput.id = \"Input\"\n","import { createContext } from \"@chakra-ui/react-context\"\n\ninterface PortalManagerContext {\n  zIndex?: number\n}\n\nconst [PortalManagerContextProvider, usePortalManager] =\n  createContext<PortalManagerContext | null>({\n    strict: false,\n    name: \"PortalManagerContext\",\n  })\n\nexport { usePortalManager }\n\nexport interface PortalManagerProps {\n  children?: React.ReactNode\n  /**\n   * [Z-Index war] If your has multiple elements\n   * with z-index clashing, you might need to apply a z-index to the Portal manager\n   */\n  zIndex?: number\n}\n\nexport function PortalManager(props: PortalManagerProps) {\n  const { children, zIndex } = props\n  return (\n    <PortalManagerContextProvider value={{ zIndex }}>\n      {children}\n    </PortalManagerContextProvider>\n  )\n}\n\nPortalManager.displayName = \"PortalManager\"\n","import { useEffect, useLayoutEffect } from \"react\"\n\nexport const useSafeLayoutEffect = Boolean(globalThis?.document)\n  ? useLayoutEffect\n  : useEffect\n","import { useEffect } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(\n  callback: (...args: any[]) => void,\n  delay: number | null,\n) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(() => {\n      fn()\n    }, delay)\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [delay, fn])\n}\n","import { useCallback, useEffect, useRef } from \"react\"\n\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  callback: T | undefined,\n  deps: React.DependencyList = [],\n) {\n  const callbackRef = useRef(callback)\n\n  useEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args) => callbackRef.current?.(...args)) as T, deps)\n}\n","import { useEffect, useRef } from \"react\"\n\nexport function useUpdateEffect(\n  callback: React.EffectCallback,\n  deps: React.DependencyList,\n) {\n  const renderCycleRef = useRef(false)\n  const effectCycleRef = useRef(false)\n\n  useEffect(() => {\n    const mounted = renderCycleRef.current\n    const run = mounted && effectCycleRef.current\n    if (run) {\n      return callback()\n    }\n    effectCycleRef.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps)\n\n  useEffect(() => {\n    renderCycleRef.current = true\n    return () => {\n      renderCycleRef.current = false\n    }\n  }, [])\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.25\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.25\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.25 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps, this);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useTimeout } from \"@chakra-ui/react-use-timeout\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport { chakra } from \"@chakra-ui/system\"\nimport type { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\nimport { ToastProviderProps } from \"./toast.provider\"\nimport { memo, useEffect, useMemo, useState } from \"react\"\n\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastComponentProps\n  extends ToastOptions,\n    Pick<ToastProviderProps, \"motionVariants\" | \"toastSpacing\"> {}\n\nexport const ToastComponent = memo((props: ToastComponentProps) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\",\n  } = props\n\n  const [delay, setDelay] = useState(duration)\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const containerStyles = useMemo(\n    () => ({\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: toastSpacing,\n      ...containerStyle,\n    }),\n    [containerStyle, toastSpacing],\n  )\n\n  const toastStyle = useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.div\n      layout\n      className=\"chakra-toast\"\n      variants={motionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={toastStyle}\n    >\n      <chakra.div\n        role=\"status\"\n        aria-atomic=\"true\"\n        className=\"chakra-toast__inner\"\n        __css={containerStyles}\n      >\n        {runIfFn(message, { id, onClose: close })}\n      </chakra.div>\n    </motion.div>\n  )\n})\n\nToastComponent.displayName = \"ToastComponent\"\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { createPortal } from \"react-dom\"\nimport { usePortalManager } from \"./portal-manager\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\n\ntype PortalContext = HTMLDivElement | null\n\nconst [PortalContextProvider, usePortalContext] = createContext<PortalContext>({\n  strict: false,\n  name: \"PortalContext\",\n})\n\nconst PORTAL_CLASSNAME = \"chakra-portal\"\nconst PORTAL_SELECTOR = `.chakra-portal`\n\nconst Container = (props: React.PropsWithChildren<{ zIndex: number }>) => (\n  <div\n    className=\"chakra-portal-zIndex\"\n    style={{\n      position: \"absolute\",\n      zIndex: props.zIndex,\n      top: 0,\n      left: 0,\n      right: 0,\n      // NB: Don't add `bottom: 0`, it makes the entire app unusable\n      // @see https://github.com/chakra-ui/chakra-ui/issues/3201\n    }}\n  >\n    {props.children}\n  </div>\n)\n\n/**\n * Portal that uses `document.body` as container\n */\nconst DefaultPortal = (\n  props: React.PropsWithChildren<{ appendToParentPortal?: boolean }>,\n) => {\n  const { appendToParentPortal, children } = props\n\n  const [tempNode, setTempNode] = useState<HTMLElement | null>(null)\n  const portal = useRef<HTMLDivElement | null>(null)\n\n  const [, forceUpdate] = useState({})\n  useEffect(() => forceUpdate({}), [])\n\n  const parentPortal = usePortalContext()\n  const manager = usePortalManager()\n\n  useSafeLayoutEffect(() => {\n    if (!tempNode) return\n\n    const doc = tempNode.ownerDocument\n    const host = appendToParentPortal ? parentPortal ?? doc.body : doc.body\n\n    if (!host) return\n\n    portal.current = doc.createElement(\"div\")\n    portal.current.className = PORTAL_CLASSNAME\n\n    host.appendChild(portal.current)\n    forceUpdate({})\n\n    const portalNode = portal.current\n    return () => {\n      if (host.contains(portalNode)) {\n        host.removeChild(portalNode)\n      }\n    }\n  }, [tempNode])\n\n  const _children = manager?.zIndex ? (\n    <Container zIndex={manager?.zIndex}>{children}</Container>\n  ) : (\n    children\n  )\n\n  return portal.current ? (\n    createPortal(\n      <PortalContextProvider value={portal.current}>\n        {_children}\n      </PortalContextProvider>,\n      portal.current,\n    )\n  ) : (\n    <span\n      ref={(el) => {\n        if (el) setTempNode(el)\n      }}\n    />\n  )\n}\n\ninterface ContainerPortalProps extends React.PropsWithChildren<{}> {\n  containerRef: React.RefObject<HTMLElement | null>\n  /**\n   * @default false\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal that uses a custom container\n */\nconst ContainerPortal = (props: ContainerPortalProps) => {\n  const { children, containerRef, appendToParentPortal } = props\n  const containerEl = containerRef.current\n  const host =\n    containerEl ?? (typeof window !== \"undefined\" ? document.body : undefined)\n\n  const portal = useMemo(() => {\n    const node = containerEl?.ownerDocument.createElement(\"div\")\n    if (node) node.className = PORTAL_CLASSNAME\n    return node\n  }, [containerEl])\n\n  const [, forceUpdate] = useState({})\n  useSafeLayoutEffect(() => forceUpdate({}), [])\n\n  useSafeLayoutEffect(() => {\n    if (!portal || !host) return\n    host.appendChild(portal)\n    return () => {\n      host.removeChild(portal)\n    }\n  }, [portal, host])\n\n  if (host && portal) {\n    return createPortal(\n      <PortalContextProvider value={appendToParentPortal ? portal : null}>\n        {children}\n      </PortalContextProvider>,\n      portal,\n    )\n  }\n\n  return null\n}\n\nexport interface PortalProps {\n  /**\n   * The `ref` to the component where the portal will be attached to.\n   */\n  containerRef?: React.RefObject<HTMLElement | null>\n  /**\n   * The content or node you'll like to portal\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, the portal will check if it is within a parent portal\n   * and append itself to the parent's portal node.\n   * This provides nesting for portals.\n   *\n   * If `false`, the portal will always append to `document.body`\n   * regardless of nesting. It is used to opt out of portal nesting.\n   *\n   * @default true\n   */\n  appendToParentPortal?: boolean\n}\n\n/**\n * Portal\n *\n * Declarative component used to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * @see Docs https://chakra-ui.com/portal\n */\n\nexport function Portal(props: PortalProps) {\n  const portalProps: PortalProps = {\n    appendToParentPortal: true,\n    ...props,\n  }\n\n  const { containerRef, ...rest } = portalProps\n  return containerRef ? (\n    <ContainerPortal containerRef={containerRef} {...rest} />\n  ) : (\n    <DefaultPortal {...rest} />\n  )\n}\n\nPortal.className = PORTAL_CLASSNAME\nPortal.selector = PORTAL_SELECTOR\n\nPortal.displayName = \"Portal\"\n","import { AnimatePresence, Variants } from \"framer-motion\"\nimport { Portal, PortalProps } from \"@chakra-ui/portal\"\nimport { ToastComponent, ToastComponentProps } from \"./toast.component\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport { toastStore } from \"./toast.store\"\nimport { getToastListStyle } from \"./toast.utils\"\nimport { useSyncExternalStore } from \"react\"\nimport { createContext } from \"@chakra-ui/react-context\"\n\nexport interface ToastMethods {\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n  notify: (message: ToastMessage, options?: CreateToastOptions) => ToastId\n  /**\n   * Close all toasts at once.\n   * If given positions, will only close those.\n   */\n  closeAll: (options?: CloseAllToastsOptions) => void\n  /**\n   * Requests to close a toast based on its id and position\n   */\n  close: (id: ToastId) => void\n  /**\n   * Update a specific toast with new options based on the\n   * passed `id`\n   */\n  update: (id: ToastId, options: Omit<UseToastOptions, \"id\">) => void\n  isActive: (id: ToastId) => boolean\n}\n\nexport type CreateToastOptions = Partial<\n  Pick<\n    ToastOptions,\n    | \"status\"\n    | \"duration\"\n    | \"position\"\n    | \"id\"\n    | \"onCloseComplete\"\n    | \"containerStyle\"\n  >\n>\n\nexport type ToastProviderProps = React.PropsWithChildren<{\n  /**\n   * Default options for `useToast(options)`\n   *\n   * @example\n   * <ToastProvider defaultOptions={{ duration: 10_000, isClosable: true }} />\n   */\n  defaultOptions?: UseToastOptions\n\n  /**\n   * Customize the default motion config to animate the toasts your way\n   *\n   * @example\n   * const motionVariants =\n   * <ToastProvider motionVariants={motionVariants} />\n   */\n  motionVariants?: Variants\n\n  /**\n   * Are you looking for a way to style the toast? Use a custom `Alert` variant in the theme.\n   * This property overrides the default ToastComponent with your own implementation.\n   *\n   * @example\n   * const CustomToastComponent = (props: ToastComponentProps) => ...\n   * <ToastProvider component={CustomToastComponent} />\n   *\n   * @default ToastComponent\n   */\n  component?: React.FC<ToastComponentProps>\n\n  /**\n   * Define the margin between toasts\n   *\n   * @default 0.5rem\n   */\n  toastSpacing?: string | number\n  /**\n   * Props to be forwarded to the portal component\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n}>\n\n/**\n * Passes default options down to be used by toast creator function\n */\nexport const [ToastOptionProvider, useToastOptionContext] = createContext<\n  UseToastOptions | undefined\n>({\n  name: `ToastOptionsContext`,\n  strict: false,\n})\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const state = useSyncExternalStore(\n    toastStore.subscribe,\n    toastStore.getState,\n    toastStore.getState,\n  )\n\n  const {\n    motionVariants,\n    component: Component = ToastComponent,\n    portalProps,\n  } = props\n\n  const stateKeys = Object.keys(state) as Array<keyof typeof state>\n  const toastList = stateKeys.map((position) => {\n    const toasts = state[position]\n\n    return (\n      <div\n        role=\"region\"\n        aria-live=\"polite\"\n        aria-label={`Notifications-${position}`}\n        key={position}\n        id={`chakra-toast-manager-${position}`}\n        style={getToastListStyle(position)}\n      >\n        <AnimatePresence initial={false}>\n          {toasts.map((toast) => (\n            <Component\n              key={toast.id}\n              motionVariants={motionVariants}\n              {...toast}\n            />\n          ))}\n        </AnimatePresence>\n      </div>\n    )\n  })\n\n  return <Portal {...portalProps}>{toastList}</Portal>\n}\n","import type { AlertStatus } from \"@chakra-ui/alert\"\nimport { StyleProps, ThemingProps, useChakra } from \"@chakra-ui/system\"\nimport type { RenderProps, ToastId, ToastOptions } from \"./toast.types\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { useMemo } from \"react\"\nimport { useToastOptionContext } from \"./toast.provider\"\n\nexport interface UseToastOptions extends ThemingProps<\"Alert\"> {\n  /**\n   * The placement of the toast\n   *\n   * @default \"bottom\"\n   */\n  position?: ToastPosition\n  /**\n   * The delay before the toast hides (in milliseconds)\n   * If set to `null`, toast will never dismiss.\n   *\n   * @default 5000 ( = 5000ms )\n   */\n  duration?: ToastOptions[\"duration\"]\n  /**\n   * Render a component toast component.\n   * Any component passed will receive 2 props: `id` and `onClose`.\n   */\n  render?(props: RenderProps): React.ReactNode\n  /**\n   * The title of the toast\n   */\n  title?: React.ReactNode\n  /**\n   * The description of the toast\n   */\n  description?: React.ReactNode\n  /**\n   * If `true`, toast will show a close button\n   * @default false\n   */\n  isClosable?: boolean\n  /**\n   * The status of the toast.\n   */\n  status?: AlertStatus\n  /**\n   * A custom icon that will be displayed by the toast.\n   */\n  icon?: React.ReactNode\n  /**\n   * The `id` of the toast.\n   *\n   * Mostly used when you need to prevent duplicate.\n   * By default, we generate a unique `id` for each toast\n   */\n  id?: ToastId\n  /**\n   * Callback function to run side effects after the toast has closed.\n   */\n  onCloseComplete?: () => void\n  /**\n   * Optional style overrides for the container wrapping the toast component.\n   */\n  containerStyle?: StyleProps\n}\n\n/**\n * React hook used to create a function that can be used\n * to show toasts in an application.\n */\nexport function useToast(options?: UseToastOptions): CreateToastFnReturn {\n  const { theme } = useChakra()\n  const defaultOptions = useToastOptionContext()\n\n  return useMemo(\n    () =>\n      createToastFn(theme.direction, {\n        ...defaultOptions,\n        ...options,\n      }),\n    [options, theme.direction, defaultOptions],\n  )\n}\n\nexport default useToast\n","export type LogicalToastPosition =\n  | \"top-start\"\n  | \"top-end\"\n  | \"bottom-start\"\n  | \"bottom-end\"\n\nexport type ToastPositionWithLogical =\n  | LogicalToastPosition\n  | \"top\"\n  | \"top-left\"\n  | \"top-right\"\n  | \"bottom\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n\nexport type ToastPosition = Exclude<\n  ToastPositionWithLogical,\n  LogicalToastPosition\n>\n\ntype LogicalPlacementMap = Record<\n  LogicalToastPosition,\n  { ltr: ToastPosition; rtl: ToastPosition }\n>\n\nexport function getToastPlacement(\n  position: ToastPosition | undefined,\n  dir: \"ltr\" | \"rtl\",\n): ToastPosition | undefined {\n  const computedPosition = position ?? \"bottom\"\n  const logicals: LogicalPlacementMap = {\n    \"top-start\": { ltr: \"top-left\", rtl: \"top-right\" },\n    \"top-end\": { ltr: \"top-right\", rtl: \"top-left\" },\n    \"bottom-start\": { ltr: \"bottom-left\", rtl: \"bottom-right\" },\n    \"bottom-end\": { ltr: \"bottom-right\", rtl: \"bottom-left\" },\n  }\n\n  const logical = logicals[computedPosition as keyof typeof logicals]\n  return logical?.[dir] ?? computedPosition\n}\n","import {\n  chakra,\n  ChakraProps,\n  forwardRef,\n  SystemStyleObject,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst fallbackIcon = {\n  path: (\n    <g stroke=\"currentColor\" strokeWidth=\"1.5\">\n      <path\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        d=\"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n      />\n      <path\n        fill=\"currentColor\"\n        strokeLinecap=\"round\"\n        d=\"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n      />\n      <circle fill=\"none\" strokeMiterlimit=\"10\" cx=\"12\" cy=\"12\" r=\"11.25\" />\n    </g>\n  ),\n  viewBox: \"0 0 24 24\",\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport interface IconProps\n  extends Omit<React.SVGAttributes<SVGElement>, keyof ChakraProps>,\n    ChakraProps {\n  orientation?: Orientation\n}\n\n/**\n * The Icon component renders as an svg element to help define your own custom components.\n *\n * @see Docs https://chakra-ui.com/docs/components/icon#using-the-icon-component\n */\nexport const Icon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-icon\", className)\n  const customStyles = useStyleConfig(\"Icon\", props)\n\n  const styles: SystemStyleObject = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles,\n  }\n\n  const shared: any = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles,\n  }\n\n  const _viewBox = viewBox ?? fallbackIcon.viewBox\n\n  /**\n   * If you're using an icon library like `react-icons`.\n   * Note: anyone passing the `as` prop, should manage the `viewBox` from the external component\n   */\n  if (element && typeof element !== \"string\") {\n    return <chakra.svg as={element} {...shared} {...rest} />\n  }\n\n  const _path = (children ?? fallbackIcon.path) as React.ReactNode\n\n  return (\n    <chakra.svg verticalAlign=\"middle\" viewBox={_viewBox} {...shared} {...rest}>\n      {_path}\n    </chakra.svg>\n  )\n})\n\nIcon.displayName = \"Icon\"\n\nexport default Icon\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\n\nexport function CheckIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function InfoIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function WarningIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n}\n","import { SystemStyleObject } from \"@chakra-ui/system\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { CheckIcon, InfoIcon, WarningIcon } from \"./icons\"\nimport { Spinner } from \"@chakra-ui/spinner\"\n\nexport const [AlertProvider, useAlertContext] = createContext<AlertContext>({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\",\n})\n\nexport const [AlertStylesProvider, useAlertStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\",\n})\n\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: \"blue\" },\n  warning: { icon: WarningIcon, colorScheme: \"orange\" },\n  success: { icon: CheckIcon, colorScheme: \"green\" },\n  error: { icon: WarningIcon, colorScheme: \"red\" },\n  loading: { icon: Spinner, colorScheme: \"blue\" },\n}\n\nexport function getStatusColorScheme(status: AlertStatus) {\n  return STATUSES[status].colorScheme\n}\n\nexport function getStatusIcon(status: AlertStatus) {\n  return STATUSES[status].icon\n}\n\nexport type AlertStatus = keyof typeof STATUSES\n\nexport interface AlertContext {\n  status: AlertStatus\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport {\n  AlertProvider,\n  AlertStatus,\n  AlertStylesProvider,\n  getStatusColorScheme,\n} from \"./alert-context\"\n\ninterface AlertOptions {\n  /**\n   * The status of the alert\n   * @default \"info\"\n   */\n  status?: AlertStatus\n}\n\nexport interface AlertProps\n  extends HTMLChakraProps<\"div\">,\n    AlertOptions,\n    ThemingProps<\"Alert\"> {\n  /**\n   * @default false\n   */\n  addRole?: boolean\n}\n\n/**\n * Alert is used to communicate the state or status of a\n * page, feature or action\n *\n * @see Docs https://chakra-ui.com/docs/components/alert\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/alert/\n */\nexport const Alert = forwardRef<AlertProps, \"div\">(function Alert(props, ref) {\n  const { status = \"info\", addRole = true, ...rest } = omitThemingProps(props)\n  const colorScheme = props.colorScheme ?? getStatusColorScheme(status)\n\n  const styles = useMultiStyleConfig(\"Alert\", { ...props, colorScheme })\n\n  const alertStyles: SystemStyleObject = {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container,\n  }\n\n  return (\n    <AlertProvider value={{ status }}>\n      <AlertStylesProvider value={styles}>\n        <chakra.div\n          data-status={status}\n          role={addRole ? \"alert\" : undefined}\n          ref={ref}\n          {...rest}\n          className={cx(\"chakra-alert\", props.className)}\n          __css={alertStyles}\n        />\n      </AlertStylesProvider>\n    </AlertProvider>\n  )\n})\n\nAlert.displayName = \"Alert\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { getStatusIcon, useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertIconProps extends HTMLChakraProps<\"span\"> {}\n\nexport function AlertIcon(props: AlertIconProps) {\n  const { status } = useAlertContext()\n  const BaseIcon = getStatusIcon(status)\n  const styles = useAlertStyles()\n  const css = status === \"loading\" ? styles.spinner : styles.icon\n\n  return (\n    <chakra.span\n      display=\"inherit\"\n      data-status={status}\n      {...props}\n      className={cx(\"chakra-alert__icon\", props.className)}\n      __css={css}\n    >\n      {props.children || <BaseIcon h=\"100%\" w=\"100%\" />}\n    </chakra.span>\n  )\n}\n\nAlertIcon.displayName = \"AlertIcon\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertTitleProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertTitle = forwardRef<AlertTitleProps, \"div\">(\n  function AlertTitle(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__title\", props.className)}\n        __css={styles.title}\n      />\n    )\n  },\n)\n\nAlertTitle.displayName = \"AlertTitle\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertDescriptionProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"div\">(\n  function AlertDescription(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n    const descriptionStyles: SystemStyleObject = {\n      display: \"inline\",\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__desc\", props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  },\n)\n\nAlertDescription.displayName = \"AlertDescription\"\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nfunction CloseIcon(props: IconProps) {\n  return (\n    <Icon focusable=\"false\" aria-hidden {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n      />\n    </Icon>\n  )\n}\n\nexport interface CloseButtonProps\n  extends HTMLChakraProps<\"button\">,\n    ThemingProps<\"CloseButton\"> {\n  /**\n   * If `true`, the close button will be disabled.\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\n/**\n * A button with a close icon.\n *\n * It is used to handle the close functionality in feedback and overlay components\n * like Alerts, Toasts, Drawers and Modals.\n *\n * @see Docs https://chakra-ui.com/docs/components/close-button\n */\nexport const CloseButton = forwardRef<CloseButtonProps, \"button\">(\n  function CloseButton(props, ref) {\n    const styles = useStyleConfig(\"CloseButton\", props)\n    const { children, isDisabled, __css, ...rest } = omitThemingProps(props)\n\n    const baseStyle: SystemStyleObject = {\n      outline: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexShrink: 0,\n    }\n\n    return (\n      <chakra.button\n        type=\"button\"\n        aria-label=\"Close\"\n        ref={ref}\n        disabled={isDisabled}\n        __css={{\n          ...baseStyle,\n          ...styles,\n          ...__css,\n        }}\n        {...rest}\n      >\n        {children || <CloseIcon width=\"1em\" height=\"1em\" />}\n      </chakra.button>\n    )\n  },\n)\n\nCloseButton.displayName = \"CloseButton\"\n","import { createRenderToast } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { CreateToastOptions, ToastMethods } from \"./toast.provider\"\nimport type { ToastId, ToastMessage, ToastState } from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\ntype ToastStore = ToastMethods & {\n  getState: () => ToastState\n  subscribe: (onStoreChange: () => void) => () => void\n  removeToast: (id: ToastId, position: ToastPosition) => void\n}\n\nconst initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": [],\n}\n\n/**\n * Store to track all the toast across all positions\n */\nexport const toastStore = createStore(initialState)\n\nfunction createStore(initialState: ToastState): ToastStore {\n  let state = initialState\n  const listeners = new Set<() => void>()\n\n  const setState = (setStateFn: (values: ToastState) => ToastState) => {\n    state = setStateFn(state)\n    listeners.forEach((l) => l())\n  }\n\n  return {\n    getState: () => state,\n\n    subscribe: (listener) => {\n      listeners.add(listener)\n      return () => {\n        // Delete all toasts on unmount\n        setState(() => initialState)\n        listeners.delete(listener)\n      }\n    },\n\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState((prevState) => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter((toast) => toast.id != id),\n      }))\n    },\n\n    notify: (message, options) => {\n      const toast = createToast(message, options)\n      const { position, id } = toast\n\n      setState((prevToasts) => {\n        const isTop = position.includes(\"top\")\n\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n        const toasts = isTop\n          ? [toast, ...(prevToasts[position] ?? [])]\n          : [...(prevToasts[position] ?? []), toast]\n\n        return {\n          ...prevToasts,\n          [position]: toasts,\n        }\n      })\n\n      return id\n    },\n\n    update: (id, options) => {\n      if (!id) return\n\n      setState((prevState) => {\n        const nextState = { ...prevState }\n        const { position, index } = findToast(nextState, id)\n\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options),\n          }\n        }\n\n        return nextState\n      })\n    },\n\n    closeAll: ({ positions } = {}) => {\n      // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n      setState((prev) => {\n        const allPositions: ToastPosition[] = [\n          \"bottom\",\n          \"bottom-right\",\n          \"bottom-left\",\n          \"top\",\n          \"top-left\",\n          \"top-right\",\n        ]\n\n        const positionsToClose = positions ?? allPositions\n\n        return positionsToClose.reduce(\n          (acc, position) => {\n            acc[position] = prev[position].map((toast) => ({\n              ...toast,\n              requestClose: true,\n            }))\n\n            return acc\n          },\n          { ...prev } as ToastState,\n        )\n      })\n    },\n\n    close: (id) => {\n      setState((prevState) => {\n        const position = getToastPosition(prevState, id)\n\n        if (!position) return prevState\n\n        return {\n          ...prevState,\n          [position]: prevState[position].map((toast) => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true,\n              }\n            }\n\n            return toast\n          }),\n        }\n      })\n    },\n\n    isActive: (id) => Boolean(findToast(toastStore.getState(), id).position),\n  }\n}\n\n/**\n * Static id counter to create unique ids\n * for each toast\n */\nlet counter = 0\n\n/**\n * Create properties for a new toast\n */\nfunction createToast(message: ToastMessage, options: CreateToastOptions = {}) {\n  counter += 1\n  const id = options.id ?? counter\n\n  const position = options.position ?? \"bottom\"\n\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle,\n  }\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertProps,\n  AlertTitle,\n} from \"@chakra-ui/alert\"\nimport { chakra } from \"@chakra-ui/system\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport type { RenderProps, ToastId } from \"./toast.types\"\nimport { getToastPlacement } from \"./toast.placement\"\nimport { toastStore } from \"./toast.store\"\n\nexport interface ToastProps\n  extends UseToastOptions,\n    Omit<AlertProps, keyof UseToastOptions> {\n  onClose?: () => void\n}\n\n/**\n * The `Toast` component is used to give feedback to users after an action has taken place.\n *\n * @see Docs https://chakra-ui.com/docs/components/toast\n */\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon,\n  } = props\n\n  const ids = id\n    ? {\n        root: `toast-${id}`,\n        title: `toast-${id}-title`,\n        description: `toast-${id}-description`,\n      }\n    : undefined\n\n  return (\n    <Alert\n      addRole={false}\n      status={status}\n      variant={variant}\n      id={ids?.root}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      paddingEnd={8}\n      textAlign=\"start\"\n      width=\"auto\"\n      colorScheme={colorScheme}\n    >\n      <AlertIcon>{icon}</AlertIcon>\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={ids?.title}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription id={ids?.description} display=\"block\">\n            {description}\n          </AlertDescription>\n        )}\n      </chakra.div>\n      {isClosable && (\n        <CloseButton\n          size=\"sm\"\n          onClick={onClose}\n          position=\"absolute\"\n          insetEnd={1}\n          top={1}\n        />\n      )}\n    </Alert>\n  )\n}\n\nexport function createRenderToast(\n  options: UseToastOptions & {\n    toastComponent?: React.FC<ToastProps>\n  } = {},\n) {\n  const { render, toastComponent: ToastComponent = Toast } = options\n  const renderToast: React.FC<RenderProps> = (props) => {\n    if (typeof render === \"function\") {\n      return render({ ...props, ...options }) as JSX.Element\n    }\n    return <ToastComponent {...props} {...options} />\n  }\n  return renderToast\n}\n\ntype UseToastPromiseOption = Omit<UseToastOptions, \"status\">\n\nexport function createToastFn(\n  dir: \"ltr\" | \"rtl\",\n  defaultOptions?: UseToastOptions,\n) {\n  const normalizeToastOptions = (options?: UseToastOptions) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir,\n    ),\n  })\n\n  const toast = (options?: UseToastOptions) => {\n    const normalizedToastOptions = normalizeToastOptions(options)\n    const Message = createRenderToast(normalizedToastOptions)\n    return toastStore.notify(Message, normalizedToastOptions)\n  }\n\n  toast.update = (id: ToastId, options: Omit<UseToastOptions, \"id\">) => {\n    toastStore.update(id, normalizeToastOptions(options))\n  }\n\n  toast.promise = <Result extends any, Err extends Error = Error>(\n    promise: Promise<Result>,\n    options: {\n      success: MaybeFunction<UseToastPromiseOption, [Result]>\n      error: MaybeFunction<UseToastPromiseOption, [Err]>\n      loading: UseToastPromiseOption\n    },\n  ) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null,\n    })\n\n    promise\n      .then((data) =>\n        toast.update(id, {\n          status: \"success\",\n          duration: 5_000,\n          ...runIfFn(options.success, data),\n        }),\n      )\n      .catch((error) =>\n        toast.update(id, {\n          status: \"error\",\n          duration: 5_000,\n          ...runIfFn(options.error, error),\n        }),\n      )\n  }\n\n  toast.closeAll = toastStore.closeAll\n  toast.close = toastStore.close\n  toast.isActive = toastStore.isActive\n\n  return toast\n}\n\nexport type CreateToastFnReturn = ReturnType<typeof createToastFn>\n\ntype MaybeFunction<T, Args extends unknown[] = []> = T | ((...args: Args) => T)\n","import type { ToastPosition } from \"./toast.placement\"\nimport type { ToastId, ToastOptions, ToastState } from \"./toast.types\"\n\n/**\n * Given an array of toasts for a specific position.\n * It returns the toast that matches the `id` passed\n */\nexport const findById = (arr: ToastOptions[], id: ToastId) =>\n  arr.find((toast) => toast.id === id)\n\n/**\n * Given the toast manager state, finds the toast that matches\n * the id and return its position and index\n */\nexport function findToast(toasts: ToastState, id: ToastId) {\n  const position = getToastPosition(toasts, id)\n\n  const index = position\n    ? toasts[position].findIndex((toast) => toast.id === id)\n    : -1\n\n  return {\n    position,\n    index,\n  }\n}\n\n/**\n * Given the toast manager state, finds the position of the toast that\n * matches the `id`\n */\nexport function getToastPosition(toasts: ToastState, id: ToastId) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position as ToastPosition\n    }\n  }\n}\n\n/**\n * Given the toast manager state, checks if a specific toast is\n * still in the state, which means it is still visible on screen.\n */\nexport const isVisible = (toasts: ToastState, id: ToastId) =>\n  !!getToastPosition(toasts, id)\n\n/**\n * Gets the styles to be applied to a toast's container\n * based on its position in the manager\n */\nexport function getToastStyle(position: ToastPosition): React.CSSProperties {\n  const isRighty = position.includes(\"right\")\n  const isLefty = position.includes(\"left\")\n\n  let alignItems = \"center\"\n  if (isRighty) alignItems = \"flex-end\"\n  if (isLefty) alignItems = \"flex-start\"\n\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems,\n  }\n}\n\n/**\n * Compute the style of a toast based on its position\n */\nexport function getToastListStyle(\n  position: ToastPosition,\n): React.CSSProperties {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\"\n  const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n  const top = position.includes(\"top\")\n    ? \"env(safe-area-inset-top, 0px)\"\n    : undefined\n  const bottom = position.includes(\"bottom\")\n    ? \"env(safe-area-inset-bottom, 0px)\"\n    : undefined\n  const right = !position.includes(\"left\")\n    ? \"env(safe-area-inset-right, 0px)\"\n    : undefined\n  const left = !position.includes(\"right\")\n    ? \"env(safe-area-inset-left, 0px)\"\n    : undefined\n\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left,\n  }\n}\n"],"names":["FormControlStylesProvider","useFormControlStyles","createContext","name","errorMessage","FormControlProvider","useFormControlContext","strict","useFormControl","props","isDisabled","isInvalid","isReadOnly","isRequired","rest","_a","_b","_c","field","id","disabled","readOnly","required","onFocus","onBlur","labelIds","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","join","callAllHandlers","useFormControlProps","ariaAttr","forwardRef","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","getRootProps","htmlProps","_","context","idProp","uuid","useId","concat","labelId","setHasFeedbackText","useState","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","forwardedRef","arguments","length","undefined","mergeRefs","node","getLabelProps","props2","dataAttr","htmlFor","getErrorMessageProps","role","getRequiredIndicatorProps","children","useFormControlProvider","className","cx","jsx","value","chakra","div","__css","displayName","helperText","Input","htmlSize","input","_className","size","PortalManagerContextProvider","usePortalManager","PortalManager","zIndex","useSafeLayoutEffect","Boolean","globalThis","document","useLayoutEffect","useEffect","useTimeout","callback","delay","fn","deps","callbackRef","useRef","current","_len","args","Array","_key","call","useCallbackRef","timeoutId","window","setTimeout","clearTimeout","useUpdateEffect","renderCycleRef","effectCycleRef","PresenceContext","useIsPresent","useContext","isPresent","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","LazyContext","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","remove","index","indexOf","splice","delete","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","Object","prototype","hasOwnProperty","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","isFocusVisible","matches","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","measureInitialState","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","teardown","onStop","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","_visualElement","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","toastMotionVariants","dir","factor","ToastComponent","message","onCloseComplete","onRequestRemove","requestClose","containerStyle","motionVariants","toastSpacing","setDelay","close","containerStyles","minWidth","toastStyle","getToastStyle","onHoverStart","onMouseEnter","onHoverEnd","onMouseLeave","runIfFn","onClose","useIsMounted","PopChildMeasure","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","updateChildLookup","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","cloneElement","PortalContextProvider","usePortalContext","PORTAL_CLASSNAME","Container","DefaultPortal","appendToParentPortal","tempNode","setTempNode","portal","forceUpdate","parentPortal","manager","doc","host","portalNode","contains","_children","createPortal","el","ContainerPortal","containerRef","containerEl","Portal","portalProps","selector","ToastOptionProvider","useToastOptionContext","ToastProvider","useSyncExternalStore","toastStore","toastList","toasts","getToastListStyle","toast","useToast","theme","useChakra","defaultOptions","createToastFn","getToastPlacement","computedPosition","logical","ltr","rtl","fallbackIcon","jsxs","strokeWidth","strokeLinecap","strokeMiterlimit","cy","Icon","as","focusable","shared","w","h","lineHeight","flexShrink","useStyleConfig","_viewBox","svg","_path","verticalAlign","WarningIcon","AlertProvider","useAlertContext","hookName","providerName","AlertStylesProvider","useAlertStyles","STATUSES","icon","colorScheme","success","error","loading","Spinner","Alert","status","addRole","getStatusColorScheme","alertStyles","alignItems","overflow","container","AlertIcon","BaseIcon","getStatusIcon","css","spinner","span","AlertTitle","title","AlertDescription","descriptionStyles","description","CloseIcon","CloseButton","outline","justifyContent","initialState2","listeners","setState","setStateFn","l","removeToast","prevState","counter","String","createToast","prevToasts","nextState","findToast","createRenderToast","closeAll","positions","getToastPosition","createStore","Toast","isClosable","ids","paddingEnd","textAlign","flex","onClick","insetEnd","toastComponent","normalizeToastOptions","normalizedToastOptions","Message","promise","catch","findById","flexDirection"],"sourceRoot":""}