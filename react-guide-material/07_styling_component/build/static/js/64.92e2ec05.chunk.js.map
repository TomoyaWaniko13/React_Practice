{"version":3,"file":"static/js/64.92e2ec05.chunk.js","mappings":"2KASA,MA4CA,EA5CgBA,KACd,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAcvCC,EAAQ,CACZC,OAAQ,OACR,gBAAiB,SACjBC,OAAQ,OACRC,QAAS,QAITC,MAAO,IACPC,OAAQ,GACRC,WAAY,OACZC,OAAQ,UAGRC,gBAAiBX,EAAa,OAAS,IAKzC,OACEY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQZ,MAAOA,EAAOa,QAjCLC,IAAMhB,GAAciB,IAASA,IAiCFJ,SAAC,wBAG7CC,EAAAA,EAAAA,KAAA,OAAKZ,MAAO,CAAEgB,UAAW,UAAWL,SAAEd,GAAc,mEACnD,C","sources":["010_inline_style/end/Example.js"],"sourcesContent":["/* POINT\r\n・再利用性が低い\r\n・疑似要素やメディアクエリが使用できない\r\n・レンダリングの度に計算されるのでパフォーマンスが劣る\r\n・動的で頻繁に計算されるスタイルの適用\r\n */\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst Example = () => {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const clickHandler = () => setIsSelected(prev => !prev);\r\n\r\n  /* POINT インラインスタイルのメリットとデメリット\r\n  メリット\r\n    直感的に記述することができる。\r\n  デメリット\r\n    再レンダリングの度に値が計算されるのでパフォーマンス的に優れていない\r\n    要素に直接記述しているので詳細度が一番高くなり、cssのスタイルが何も効かない\r\n    疑似セレクタやメディアクエリにも対応していないため、実装しようとするとわかりづらいコードになってしまう\r\n  */\r\n\r\n  /* POINT style属性に適応させるスタイルをオブジェクトで記述します */\r\n  const style = {\r\n    margin: \"auto\",\r\n    \"border-radius\": \"9999px\",\r\n    border: \"none\",\r\n    display: \"block\",\r\n\r\n    /* POINT 単位を書かない場合\r\n    単位を書かずに文字列ではなく数字を与えてあげると、reactが自動で解釈し値にpxを付けてくれます。 */\r\n    width: 120,\r\n    height: 60,\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    /* POINT 三項演算子を使用して isSelected が true の場合は 'pink' false の場合は空文字( '' ) を与えています。\r\n    valueに空文字を与えた場合プロパティは適応されません。 */\r\n    backgroundColor: isSelected ? \"pink\" : \"\",\r\n    /* POINT 直接記述することによって可読性が大きく低下するので、可読性が向上する方法を考えて実装してみよう */\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <button style={style} onClick={clickHandler}>\r\n        ボタン\r\n      </button>\r\n      <div style={{ textAlign: \"center\" }}>{isSelected && \"クリックされました。\"}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"names":["Example","isSelected","setIsSelected","useState","style","margin","border","display","width","height","fontWeight","cursor","backgroundColor","_jsxs","_Fragment","children","_jsx","onClick","clickHandler","prev","textAlign"],"sourceRoot":""}